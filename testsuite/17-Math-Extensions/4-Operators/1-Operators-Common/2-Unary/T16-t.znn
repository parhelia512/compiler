(** 
 * 17. Math extensions.
 * 17.4. Operators
 * 17.4.2. Unary
 * 
 * Positive test: Unary minus + indices
 *)

module Main;

type vi = array *,* of integer;
type vr = array *,* of real;
type vc = array *,* of integer{64};
type vb = array *,* of boolean;

type iind = array {math} * of integer;
type bind = array {math} * of boolean;

var
	ai1, ai2 : array {math} 2, 3 of integer;
	ar1 : array {math} 2, 3 of real;
	ar2 : vr;
	ac1 : array {math} 2, 3 of cardinal;
	ac2 : vc;
	
	bi1, bi2 : iind;
	bb1, bb2 : bind;
	
begin	
	
	ai1 := [[-1, 2, -3], [4, -5, 6]];
	ar1 := [[1.1, -2.1, 3.1], [-4.1, 5.1, -6.1]];
	ac1 := [[1, 2, 3], [4, 5, 6]];
	
	bi1 := [0, 1];
	bi2 := [0, 1, 0];
	bb1 := [false, true];
	bb2 := [false, true, true];
	
	ai2 := -ai1[.., bi2];
	ar2 := -ar1[bi1, bb2];
	ac2 := -ac1[bb1, 0..1];
	
	if (ai2[0, 0] # 1) or (ai2[0, 1] # -2) or (ai2[0, 2] # 1) or (ai2[1, 0] # -4) or (ai2[1, 1] # 5) or (ai2[1, 2] # -4)
	then
		halt(0);
	end;
	
	if (ar2[0, 0] # +2.1) or (ar2[0, 1] # -3.1) or (ar2[1, 0] # -5.1) or (ar2[1, 1] # 6.1)
	then
		halt(0);
	end;
	
	if (ac2[0, 0] # -4) or (ac2[0, 1] # -5)
	then
		halt(0);
	end;
	
	halt(1);
	
end Main.