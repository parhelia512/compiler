(** 
 * 17. Math extensions.
 * 17.4.2. Matrix operators
 * 
 * Negative test: matrix multiplication
 * with scalar
 *)

module Main;

type vi = array {math} * of integer;
type vr = array {math} * of real;
type mi = array {math} *,* of integer;
type mr = array {math} *,* of real;
type vb = array {math} * of boolean;

var
	Ai, Bi, Ci : mi;
	ai, bi, ci : vi;
	Ar, Br, Cr : mr;
	ar, br, cr : vr;
	ab, bb, cb : vb;
	
	i, j : integer;
  
begin
	  
	ai := [1,2];
	  
	Ai := [[1, 2, 4], [6, -1, 7]];  
	Bi := [[-3, 2], [5, -4]];  
	ai := [4, 1, -3];
	bi := [-2, 4, 8];
	
	do
		Ci := Ai * Bi;
	on IncompatibleSizes
	do
		halt(1);
	end;
	
	halt(0);
	
	(*
	for i := 0 to 1
	do
		for j := 0 to 1
		do
			if (Ai[i, j + 1] # Ci[j, i])
			then
				halt(0);
			end;
		end;
	end;
	*)
	
end Main.

