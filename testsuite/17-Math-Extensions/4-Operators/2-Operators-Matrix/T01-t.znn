(** 
 * 17. Math extensions.
 * 17.4.2. Matrix operators
 * 
 * Positive test: matrix transposition
 * with scalar
 *)

module Main;

type vi = array {math} * of integer;
type vr = array {math} * of real;
type mi = array {math} *,* of integer;
type mr = array {math} *,* of real;
type vb = array {math} * of boolean;

var
	Ai, Bi, Ci : mi;
	ai, bi, ci : vi;
	Ar, Br, Cr : mr;
	ar, br, cr : vr;
	ab, bb, cb : vb;
	
	i, j : integer;
  
begin
	  
	Ai := [[1, 2, 4], [6, -1, 7]];  
	Ci := !Ai;
	
	for i := 0 to len(Ai, 0) - 1
	do
		for j := 0 to len(Ai, 1) - 1
		do
			if (Ai[i, j] # Ci[j, i])
			then
				halt(0);
			end;
		end;
	end;
	
	halt(1);
	
end Main.

