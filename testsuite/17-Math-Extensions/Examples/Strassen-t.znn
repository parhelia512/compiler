(** 
 * 17. Math extensions.
 * Examples
 * 
 * Strassen
 *)

module Main;

type Matrix = array {math} *, * of real;

procedure Strassen(A : Matrix; B: Matrix) : Matrix;
var
	C, C11, C12, C21, C22: Matrix;
	A11, A12, A21, A22, 
	B11, B12, B21, B22: Matrix;
	D1, D2, D3, D4, D5, D6, D7: Matrix;
	n: integer;
	u, v: range;
begin
	(* Мы предполагаем, что A и B – 
	матрицы размера nxn и n = 2^k *)
	n := len(A, 0);
	if n = 1 then
		C := A * B
	else
		u := 0 .. (n div 2 - 1);
		v := n div 2 .. n - 1;
		A11 := A[u, u];
		A12 := A[u, v];
		A21 := A[v, u];
		A22 := A[v, v];
		B11 := B[u, u];
		B12 := B[u, v];
		B21 := B[v, u];
		B22 := B[v, v];
		D1 := Strassen(A11 + A22 , B11 + B22);
		D2 := Strassen(A12 - A22, B21 + B22);
		D3 := Strassen(A11 - A21, B11 + B12);
		D4 := Strassen(A11 + A12, B22);
		D5 := Strassen(A21 + A22, B11);
		D6 := Strassen(A11, B12 - B22);
		D7 := Strassen(A22, B21 - B11);
		C11 := D1 + D2 - D4 + D7;
		C12 := D4 + D6;
		C21 := D5 + D7;
		C22 := D1 - D3 - D5 + D6;
		C := new Matrix(n, n);
		C[u, u] := C11;
		C[u, v] := C12;
		C[v, u] := C21;
		C[v, v] := C22;
	end;
	return C;
end Strassen;


var
	A, B, CS, CT, D : Matrix;
	i, j : integer;
	
begin
	
	A := [[-4.3, 3.5, 5.1, 6.4], [-5.62, 4.6, 5.1, 4.13], [4.5, -2.6, -5.4, 3.75], [5.63, 2.4, 4.34, -8.33]];
	B := [[-1.8, 1.3, -6.35, 12.2], [7.3, 3.74, 8.36, 7.5], [-1.8, 7.3, -7.13, 2.3], [2.7, -5.3, -2.76, 7.43]];
	
	if abs(Strassen(A,B) - A*B) > 0.001
	then
		halt(0);
	end;
	
	halt(1);
	
end Main.