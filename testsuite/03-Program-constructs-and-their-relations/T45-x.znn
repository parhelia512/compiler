(**
 * 2. Program Constructs and their Relations.
 *  
 * Negative test: implementation refines module.
 *)

(* I. The refined object A is declared after the refiner implementation B. *)
implementation B refines A;
end B.

module A;
end A.

(* II. The refined object D is declared before the refiner implementation C. *)
module D;
end D.

implementation C refines D;
end C.

module Main;
begin
	halt(0);
end Main.
