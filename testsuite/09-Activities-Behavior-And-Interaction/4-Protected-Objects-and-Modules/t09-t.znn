(** 
 * 9. Concurrency-Activities-Protocols
 * 9.4. Protocted-Objects-and-Modules
 *
 * Positive test: Simple protected object
 *)

module {protected} MainA;
var {public} i: integer;  
protocol P = (A,B,C,
P = A B C);

activity A implements P;
begin
	accept unused;	
	writeln("Accepted A");
	accept unused;	
	writeln("Accepted B");
	accept unused;	
	writeln("Accepted C");
end A; 
  

var a:A;
var {public} ok: boolean;
begin
  a := new A;
  writeln("Sending A");
  a(P.A);
  await 10;
  writeln("Sending B");
  a(P.B);
  await 10;
  writeln("Sending C");   
  a(P.C);
  await 10;  
  ok := true;
end MainA.

module {protected} Main;
import MainA;

begin
	writeln("Hello");
	MainA.i := 10;
	writeln("Hello1");
	await 100;
	if MainA.ok then halt(1) else halt(0) end
end Main.

