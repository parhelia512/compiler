(* ********* Zonnon online collection ***********
 * Queens (Chapter 3, Example 3.4)
 *
 * This example is a part of Prof. Nikalus Wirth's book
 * www.zonnon.ethz.ch/usergroup
 * (c) ETH Zurich 
 *)

module AllQueens;

var i, count: integer;
    a: array 8 of boolean;  (* 1...8 *)
    b: array 15 of boolean; (* 2..16 *)
    c: array 15 of boolean; (* -7..7 *)
    x: array 8 of integer;  (* 1...8 *)


procedure Print;
   var k:integer;
begin
   count:=count+1;
   for k := 0 to 7 do write(x[k]+1:4); end;
   writeln;
end Print;

procedure Try(i: integer);
 var j:integer;
begin 
  for j:=0 to 7 do
    if a[j] & b[i+j] & c[i-j+7] then
      x[i] := j;
      a[j] := false;
      b[i+j] := false;
      c[i-j+7] :=false;
      if i<7 then Try(i+1);
      else Print; end;
      a[j] := true;
      b[i+j] := true;
      c[i-j+7] := true;
    end;
  end;
end Try;

begin
  writeln("Example 3.5 (AllQueens)");
  count := 0;
  for i:= 0 to 7  do a[i] := true;  end;
  for i:= 0 to 14 do b[i] := true; end;
  for i:= 0 to 14 do c[i] := true; end;
  Try(0);
  writeln('Total: ',count);
  writeln("Type 'q' to exit");	
end AllQueens.