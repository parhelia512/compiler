(* ********* Zonnon online collection ***********
 * Sorting (Chapter 2, Example 2.9)
 *
 * This example is a part of Prof. Nikalus Wirth's book
 * www.zonnon.ethz.ch/usergroup
 * (c) ETH Zurich 
 *)


module Sorting;
    import System.Random as Random;
    const MAX_SIZE = 20;

    type DefaultArray = array MAX_SIZE of integer;
    var MyArray: DefaultArray;
        R: Random;

    (***** Implementation *****)
    
    procedure Partition(var a: DefaultArray; n: integer);
    var i,j: integer; w,x: integer;
    begin
       x := a[R.Next(0,n - 1)];
       i:=0; j:=n - 1;
       repeat
          while a[i] < x do i := i + 1; end;
          while x < a[j] do j := j - 1; end;
          if i <= j then
			 writeln('Exch ', i,' with ',j);
             w := a[i]; a[i] := a[j]; a[j] := w; i := i + 1; j := j - 1;
          end;
       until i > j;
    end Partition;

    (***** Example support *****)

    procedure FillTheArray;
    var i:integer;
    begin
      for i := 0 to MAX_SIZE - 1 do 
        MyArray[i] := abs( 10 - i ); 
      end; 
    end FillTheArray;
 
    procedure PrintTheArray;
    var i:integer;
    begin
       writeln("Array:");
       for i := 0 to MAX_SIZE - 1 do
          write( MyArray[i]:2, ', ' ); 
       end; 
       writeln;
    end PrintTheArray;
    
    procedure Execute;
    begin
       Partition(MyArray, MAX_SIZE); 
    end Execute;

var s:string;
begin
 R := new Random;
 writeln("Example 2.9 (Partition sort)");
 writeln("Type 'q' to exit");	
 FillTheArray;
 PrintTheArray;
 repeat
   Execute;
   PrintTheArray;
   readln(s);
 until s = "q";
 writeln("Type 'q' to exit");	
end Sorting.
