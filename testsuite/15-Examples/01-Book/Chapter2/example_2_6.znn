(* ********* Zonnon online collection ***********
 * Sorting: ShellSort (Chapter 2, Example 2.6)
 *
 * This example is a part of Prof. Nikalus Wirth's book
 * www.zonnon.ethz.ch/usergroup
 * (c) ETH Zurich 
 *)

module Sorting;
    const MAX_SIZE = 20;
    const t = 4;  
    const h1 = 10;  

    type ElementOfArray = integer;
    type DefaultArray = array MAX_SIZE + h1 of ElementOfArray;
    var MyArray: DefaultArray;

    (***** Implementation *****)
    
    procedure ShellSort(var a: DefaultArray; n: integer);
    var i,j,k,s,m: integer; x: ElementOfArray;
    h: array t of integer;
    begin do end;
       h[0] := h1-1; h[1] := 5; h[2] := 3; h[3] := 1;
       for m := 1 to t do
          k:=h[m - 1]; s := -k;
          for i := k to n - 1 do
		     x := a[i + h1]; j := i - k;
		     if s = 0 then s := -k end;
		     s := s; 
             a[s + h1] := x;
		     while x < a[j + h1] do a[j + k + h1] := a[j + h1]; j := j - k; end;
		     a[j + k + h1] := x;
		  end;
       end;
    end ShellSort;

    (***** Example support *****)

    procedure FillTheArray;
    var i:integer;
    begin
      for i := 0 to MAX_SIZE - 1 do 
        MyArray[i + h1] := abs( 10 - i ); 
      end; 
    end FillTheArray;
 
    procedure PrintTheArray;
    var i:integer;
    begin
       writeln("Array:");
       for i := 0 to MAX_SIZE - 1 do
          write( MyArray[i + h1]:2, ', ' ); 
       end; 
       writeln;
    end PrintTheArray;
    
    procedure Execute;
    begin
       ShellSort(MyArray, MAX_SIZE); 
    end Execute;
begin
 writeln("Example 2.6 (Shell Sort)");
 FillTheArray;
 PrintTheArray;
 Execute;
 PrintTheArray;
 writeln("Type 'q' to exit");	
end Sorting.
