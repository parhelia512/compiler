(* ********* Zonnon online collection ***********
 * BM (Chapter 1, Example 1.3)
 * This example is a part of Prof. Nikalus Wirth's book
 * www.zonnon.ethz.ch/usergroup
 * (c) ETH Zurich 
 *)

module BM;

const Mmax = 200;

var i,j,k,i0,M,N: integer;
  ch: char;
  p: string;
  s: string;
  d: array Mmax of integer;

begin
  writeln("Example 1.3: BM");	
  write("String: ");
  readln(s);
  N := len(s);
  loop
    write("Pattern (empty string to quit): ");
    readln(p);
    M := len(p);
    if p = "" then exit; end;

    for j := 0 to Mmax-1 do d[j] := M; end;
    for j := 0 to M-2 do d[integer(p[j])] := M-j-1; end;

    i := M; i0 := 0;
    repeat
       while i0 < i do write(s[i0]); i0 := i0 + 1; end;
       j:= M; k:= i;
       repeat
          k := k-1;
          j := j-1;
       until (j<0) or (p[j] # s[k]);
       i := i+ d[integer(s[i-1])];
    until (j<0) or (i>=N);

    if j < 0 then writeln; writeln("  Founded!"); 
    else writeln; writeln("  Not founded.");
    end;
  end;
  writeln("Type 'q' to exit");
end BM.


     
